create table Book(
	book_id int primary key not null auto_increment,
	book_title nvarchar(255) not null,
	book_auth nvarchar(255) not null,
	book_pub nvarchar(100) not null
);

create table category(
	categ_id int primary key not null auto_increment,
	categ_code varchar(6) not null unique,
	categ_desc varchar(100) not null unique
);

create table book_category(
	book_categ_id int primary key not null auto_increment,
	book_id int unique not null,
	categ_id int not null,
	foreign key(book_id) references book(book_id),
	foreign key(categ_id) references category(categ_id)
);

create table inventory(
	inv_id int primary key auto_increment not null,
	book_id int not null,
	book_code varchar(6) not null,
	status enum('available','borrowed') default 'available',
	foreign key(book_id) references book(book_id)
);


create table account(
	acc_id int primary key not null auto_increment,
	acc_username varchar(10) not null unique,
	acc_pass nvarchar(10) not null,
	acc_type enum('borrower','admin') default 'borrower'
);

create table borrower(
	borrower_id int primary key auto_increment,
	borrower_fname nvarchar(100) not null,
	borrower_mname nvarchar(100) not null,
	borrower_lname nvarchar(100) not null
);


create table borrower_account(
	bacc_id int primary key auto_increment,
	acc_id int not null unique,
	borrower_id int not null unique,
	foreign key(bacc_id) references account(acc_id),
	foreign key(borrower_id) references borrower(borrower_id)
);

create table lib_accounts(
	lib_acc_id int primary key auto_increment not null,
	user_name varchar(10) not null unique,
	user_pass nvarchar(1) not null,
	acc_fname varchar(100) not null,
	acc_mname varchar(100) not null,
	acc_lname varchar(100) not null,
	user_type enum('admin','user') default 'user'
);

--stored procedures--

--------------------------
DELIMITER //
CREATE PROCEDURE GetAccount(
	IN username VARCHAR(10),
	IN password VARCHAR(10)
)
BEGIN
	SELECT *
	  FROM lib_accounts li
	 WHERE li.user_name = username COLLATE utf8_unicode_ci  AND 
	       li.user_pass = password COLLATE utf8_unicode_ci;
END//
DELIMITER ;
------------------------


-------------------------
DELIMITER //
CREATE PROCEDURE GetAccountById(
	IN id int
)
BEGIN
	SELECT *
	  FROM lib_accounts li
	 WHERE lib_acc_id = id;
END//
DELIMITER ;
-------------------------


-------------------------
DELIMITER //
CREATE PROCEDURE GetBooks()
BEGIN
	SELECT *
	  FROM books;
END//
DELIMITER ;
-------------------------


-------------------------
DELIMITER //
CREATE PROCEDURE GetBooksWithCategory()
BEGIN
	 SELECT * 
		FROM book b
		LEFT
		JOIN book_category bc
		  ON bc.book_id = b.book_id
		JOIN category c
		  ON bc.categ_id = c.categ_id;
END//
DELIMITER ;
-------------------------


